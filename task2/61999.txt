Документация:

61999-download.sh
С проверките в началото на скрипта проверяваме дали инструмента е инсталиран на текущата машината, дали са въведени два аргумента и дали такава директория съществува изобщо. В противен случай извеждаме подходящо съобщение и излизаме с exit status различен от 0-ла.

Тъй като директорията може да бъде въведена с наклонена черта и без, това по никакъв начин не трябва да се отразява върху изпълнението на скрипта. В променливата LAST_CHAR записваме последния символ и ако той е /, го изтриваме.

Подадената директория може да не е празна, затова създаваме поддиректорията bfra.bg, в която на следваща стъпка записваме изтеглените отчети.

В променливата reports записваме само идентификаторите на отчетите, които след това изтегляме. За намиране на стойността на променливата reports изпълняваме серия от команди, който правят следното:
	- изтегляме информацията от посочения линк, но тъй като тя е в html формат, трябва да премахнем излишната информация и да вземем само тази, която се намера в тага body. 
	sed -n '/PATTERN/p' file - когато искаме да използваме sed като grep, но да променим съдържанието на файла
	"/<body>/,/<\/body>/" - взимаме това което е между двата тага
	
	- премахваме скобите sed "s/<\/*[^>]*>//g" 
	- взимаме само колоната с отчетите

В цикъла теглим всеки един отчет поотделно и премахваме допълнителната информация.
	sed -i "/${RACE}/!d" "${DIRECTORY}/bfra.bg/${RACE}" - оставя тези редове, които отговарят на шаблона
    sed -i "/CALLSIGN:/d" "${DIRECTORY}/bfra.bg/${RACE}" - премахва тези редове, които отговарят на шаблона.

61999-competition.sh
Отново имаме две проверки дали броят на аргументите е коректен и дали директорията съществува. Друга важна проверка е дали е създадена поддиректорията bfra.bg и дали има файлове в нея.

function participants
При изтеглянето на файловете създаваме поддиректория, в която записваме файловете. Така позивните за всички участници са всъщност имената на всички файлове в директорията. 
Приемаме, че в отчет с име A, се съдържат връзки само от А към някоя друга позивна, както е в примера в описанието на задачата условието. 

Пример: http://lzdx.bfra.bg/logs/2017/W1UE 
отчет - W1UE
шеста колона - HR9/W1UE

Пример:
При подадена директория /some/path/data_dir, извеждаме имената на всички файлове в директорията /some/path/data_dir/bfra.bg

function outliers
ALL_PARTICIPANTS - всички участници, за които имаме отчети
OTHERS - общо позивните от всички файлове
grep -vhFxf <( echo "${ALL_PARTICIPANTS}}" ) <( echo "${OTHERS}" ) - подаваме информацията от двете променливи 

grep -vhFxf file1 file2 - извежда тези редове от file2, които не се срещат в file1.
 
function unique
OTHERS - общо позивните от всички файлове
При всяка итерация на цикъла в променливата FILES_MATCHED записваме имената на тези файлове, които съдържат съответната позивна. В променливата COUNTER записваме броя на файловете, в които се среща позивната и извеждаме само тези, които се срещат в по-малко от 3 файла.

function cross_check
На всяка стъпка от цикъла получаваме ред от отчет, тоест ще имаме толкова итерации колкото са общо всички редове от всички файлове взети заедно. В променливите NAME, DATE, TIME и CHECK записваме съответно името на участника, датата и часа на връзката както и с кого е осъществена тя. 

След това проверяваме дали съществува отчета CHECK. Ако не съществува извеждаме реда. Ако съществува проверяваме дали в отчета има ред с името на участника (NAME), неговото време и неговия час. Ако exit status-ът е 0 значи съществува запис в отсрещият отчет, но тъй като трябва да изведем само тези, чийто запис не присъства, условието ще бъде истина когато exist status-a е различен от 0. 

function bonus & function difference
Помощната функция единствено пресмята разликата между часовете в минути.
Тук идеята в bonus е същата като в предната функция cross_check. Новото в нея е условния оператор if. Когато условието е истина, извеждаме тези отчети, при които нямаме съвпадение на името и датата, а когато е лъжа проверяваме дали разликата във времето е в порядъка на 3 минути, ако е повече от 3 минути извеждаме отчета. 

Забележка: Когато имаме съвпадение на часовете, функцията difference не се извиква. 
Забележка: Съществуват отчети, в които няма разстояние между часа и позивната !!!
Пример:
http://lzdx.bfra.bg/logs/2017/LZ1HO		
QSO:  7028 CW 2017-11-19 0734LZ1HO         599 BU     YO4AAC        599 28

Използвани материали:
http://www.grymoire.com/Unix/Sed.html#uh-15b
https://www.linuxnix.com/awk-scripting-8-awk-printf-statements-examples/
